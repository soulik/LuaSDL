# ------------------ AAlib ------------------

set(SDL_VIDEO_DRIVER_AALIB OFF CACHE BOOL "Add support for AAlib")

if (SDL_VIDEO_DRIVER_AALIB)
	find_package(aa)
	add_definitions(-DSDL_VIDEO_DRIVER_AALIB=1)
endif()

# ------------------ CACA ------------------

set(SDL_VIDEO_DRIVER_CACA OFF CACHE BOOL "Add support for CACA")

if (SDL_VIDEO_DRIVER_CACA)
	find_package(caca)
	add_definitions(-DSDL_VIDEO_DRIVER_CACA=1)
endif()

# ------------------ AUDIO ------------------

set(SDL_AUDIO_DISABLED OFF CACHE BOOL "Disable support for audio subsystem")

set(SDL_AUDIO_SRC
    audio/disk/SDL_diskaudio.c
    audio/dummy/SDL_dummyaudio.c
    audio/SDL_audio.c
    audio/SDL_audiocvt.c
    audio/SDL_audiodev.c
    audio/SDL_mixer.c
    audio/SDL_mixer_m68k.c
    audio/SDL_mixer_MMX.c
    audio/SDL_mixer_MMX_VC.c
    audio/SDL_wave.c
)

if (MINT)
	set(SDL_AUDIO_DRIVER_MINT ON CACHE BOOL "Enable support for MINT audio driver")
	
	if (SDL_AUDIO_DRIVER_MINT)
	list(APPEND SDL_AUDIO_SRC
	    audio/mint/SDL_mintaudio.c
	    audio/mint/SDL_mintaudio_dma8.c
	    audio/mint/SDL_mintaudio_gsxb.c
	    audio/mint/SDL_mintaudio_mcsn.c
	    audio/mint/SDL_mintaudio_stfa.c
	    audio/mint/SDL_mintaudio_xbios.c
	)
	endif()
endif()

if (NDS)
	list(APPEND SDL_AUDIO_SRC
	    audio/nds/SDL_ndsaudio.c
	    audio/nds/sound9.c
	)
endif()

if (WIN32)
	set(SDL_AUDIO_DRIVER_WAVEOUT ON CACHE BOOL "Enable support for Windows Waveout audio driver")
	set(SDL_AUDIO_DRIVER_DSOUND ON CACHE BOOL "Enable support for MS DirectX audio driver")
	
	if (SDL_AUDIO_DRIVER_WAVEOUT)
	list(APPEND SDL_AUDIO_SRC
	    audio/windib/SDL_dibaudio.c
	)
	endif()
	if (SDL_AUDIO_DRIVER_DSOUND)
	list(APPEND SDL_AUDIO_SRC
	    audio/windx5/SDL_dx5audio.c
	)
	endif()
elseif(UNIX AND NOT APPLE)
	find_package(ALSA)
	find_package(artsc)
	find_package(ESD)
	find_package(NASaudio)
	find_package(pulseaudio)
	#list(APPEND SDL_AUDIO_SRC
	#	audio/dsp/SDL_dspaudio.c
	#	audio/mme/SDL_mmeaudio.c
	#)

	if(BEOS)
		list(APPEND SDL_AUDIO_SRC
		    audio/baudio/SDL_beaudio.cc
		)
	elseif(DREAMCAST)
		list(APPEND SDL_AUDIO_SRC
		    audio/dc/aica.c
		    audio/dc/SDL_dcaudio.c
		)
	elseif(OS2)
		list(APPEND SDL_AUDIO_SRC
		    audio/dart/SDL_dart.c
		)
	elseif(BSD)
		list(APPEND SDL_AUDIO_SRC
		    audio/bsd/SDL_bsdaudio.c
		)
	elseif(IRIX)
		list(APPEND SDL_AUDIO_SRC
		    audio/dmedia/SDL_irixaudio.c
		)
	elseif(QNX)
		list(APPEND SDL_AUDIO_SRC
		    audio/nto/SDL_nto_audio.c
		)
	elseif(AIX)
		list(APPEND SDL_AUDIO_SRC
		    audio/paudio/SDL_paudio.c
		)
	else()
		if (ALSA_LIBRARY)
			set(SDL_AUDIO_DRIVER_ALSA ON CACHE BOOL "Enable support for ALSA audio driver")
			set(SDL_AUDIO_DRIVER_ALSA_DYNAMIC ON CACHE BOOL "Enable support for ALSA (dynamic) audio driver")
			if (SDL_AUDIO_DRIVER_ALSA OR SDL_AUDIO_DRIVER_ALSA_DYNAMIC)
			list(APPEND SDL_AUDIO_SRC
				audio/alsa/SDL_alsa_audio.c
			)
			endif()
		endif()
		if (ARTS_LIBRARY)
			list(APPEND SDL_AUDIO_SRC
				audio/arts/SDL_artsaudio.c
			)
		endif()
		if (ESD_LIBRARY)
			set(SDL_AUDIO_DRIVER_ESD ON CACHE BOOL "Enable support for ESD audio driver")
			set(SDL_AUDIO_DRIVER_ESD_DYNAMIC ON CACHE BOOL "Enable support for ESD (dynamic) audio driver")
			if (SDL_AUDIO_DRIVER_ESD OR SDL_AUDIO_DRIVER_ESD_DYNAMIC)
			list(APPEND SDL_AUDIO_SRC
				audio/esd/SDL_esdaudio.c
			)
			endif()
		endif()
		if (NAS_LIBRARY)
			list(APPEND SDL_AUDIO_SRC
				audio/nas/SDL_nasaudio.c
			)
		endif()
		if (PULSE_LIBRARY)
			set(SDL_AUDIO_DRIVER_PULSE ON CACHE BOOL "Enable support for PulseAudio audio driver")
			set(SDL_AUDIO_DRIVER_PULSE_DYNAMIC ON CACHE BOOL "Enable support for PulseAudio (dynamic) audio driver")
			if (SDL_AUDIO_DRIVER_PULSE OR SDL_AUDIO_DRIVER_PULSE_DYNAMIC)
			list(APPEND SDL_AUDIO_SRC
				audio/pulse/SDL_pulseaudio.c
			)
			endif()
		endif()
		list(APPEND SDL_AUDIO_SRC
		    audio/dma/SDL_dmaaudio.c
		    audio/sun/SDL_sunaudio.c
		)
	endif()
elseif(APPLE)
	if (DARWIN)
	elseif (MACOSX)
		list(APPEND SDL_AUDIO_SRC
		    audio/macosx/SDL_coreaudio.c
		)
	else()
		list(APPEND SDL_AUDIO_SRC
		    audio/macrom/SDL_romaudio.c
		)
	endif()
elseif(SYMBIAN)
	list(APPEND SDL_AUDIO_SRC
		audio/symbian/SDL_epocaudio.cpp
		audio/symbian/streamplayer.cpp
	)
endif()

# ------------------ CDROM ------------------

set(SDL_CDROM_DISABLED OFF CACHE BOOL "Disable support for CD-ROM subsystem")

set(SDL_CDROM_SRC
    cdrom/dummy/SDL_syscdrom.c
    cdrom/SDL_cdrom.c
)

if (MINT)
	list(APPEND SDL_CDROM_SRC
	    cdrom/mint/SDL_syscdrom.c
	)
endif()

if (WIN32)
	set(SDL_CDROM_DRIVER_WIN32 ON CACHE BOOL "Enable support for PulseAudio CD-ROM driver")
	list(APPEND SDL_CDROM_SRC
	    cdrom/win32/SDL_syscdrom.c
	)
elseif(UNIX AND NOT APPLE)
	if(BEOS)
		list(APPEND SDL_CDROM_SRC
			cdrom/beos/SDL_syscdrom.cc
		)
	elseif(DREAMCAST)
		list(APPEND SDL_CDROM_SRC
		    cdrom/dc/SDL_syscdrom.c
		)
	elseif(OS2)
		list(APPEND SDL_CDROM_SRC
		    cdrom/os2/SDL_syscdrom.c
		)
	elseif(QNX)
		list(APPEND SDL_CDROM_SRC
		    cdrom/qnx/SDL_syscdrom.c
		)
	elseif(BSD)
		list(APPEND SDL_CDROM_SRC
		    cdrom/bsdi/SDL_syscdrom.c
		    cdrom/freebsd/SDL_syscdrom.c
		    cdrom/openbsd/SDL_syscdrom.c
		)
	elseif(IRIX)
		list(APPEND SDL_CDROM_SRC
		    cdrom/aix/SDL_syscdrom.c
		)
	else()
		list(APPEND SDL_CDROM_SRC
		    cdrom/linux/SDL_syscdrom.c
		    cdrom/osf/SDL_syscdrom.c
		)
	endif()
elseif (APPLE)
	if (DARWIN)
	elseif (MACOSX)
		list(APPEND SDL_CDROM_SRC
		    cdrom/macosx/AudioFilePlayer.c
		    cdrom/macosx/AudioFileReaderThread.c
		    cdrom/macosx/CDPlayer.c
		    cdrom/macosx/SDLOSXCAGuard.c
		    cdrom/macosx/SDL_syscdrom.c
		)
	else()
		list(APPEND SDL_CDROM_SRC
		    cdrom/macos/SDL_syscdrom.c
		)
	endif()
endif()

# ------------------ CPUINFO ------------------

set(SDL_CPUINFO_DISABLED OFF CACHE BOOL "Disable support for CPU-id subsystem")

set(SDL_CPUINFO_SRC
    cpuinfo/SDL_cpuinfo.c
)

# ------------------ EVENTS ------------------

set(SDL_EVENTS_DISABLED OFF CACHE BOOL "Disable support for events subsystem")

set(SDL_EVENTS_SRC
    events/SDL_active.c
    events/SDL_events.c
    events/SDL_expose.c
    events/SDL_keyboard.c
    events/SDL_mouse.c
    events/SDL_quit.c
    events/SDL_resize.c
)

# ------------------ FILE ------------------

set(SDL_FILE_DISABLED OFF CACHE BOOL "Disable support for files subsystem")

set(SDL_FILE_SRC
    file/SDL_rwops.c
)

# ------------------ JOYSTICK ------------------

set(SDL_JOYSTICK_DISABLED OFF CACHE BOOL "Disable support for joystick subsystem")

set(SDL_JOYSTICK_SRC
    joystick/dummy/SDL_sysjoystick.c
    joystick/SDL_joystick.c
)

if (MINT)
	list(APPEND SDL_JOYSTICK_SRC
	    joystick/mint/SDL_sysjoystick.c
	)
endif()

if (NDS)
	list(APPEND SDL_JOYSTICK_SRC
	    joystick/nds/SDL_sysjoystick.c
	)
endif()

if (WIN32)
	list(APPEND SDL_JOYSTICK_SRC
	    joystick/win32/SDL_mmjoystick.c
	)
elseif(UNIX AND NOT APPLE)
	if(BEOS)
		list(APPEND SDL_JOYSTICK_SRC
			joystick/beos/SDL_bejoystick.cc
		)
	elseif(DREAMCAST)
		list(APPEND SDL_JOYSTICK_SRC
		    joystick/dc/SDL_sysjoystick.c
		)
	elseif(OS2)
		list(APPEND SDL_JOYSTICK_SRC
		)
	elseif(BSD)
		list(APPEND SDL_JOYSTICK_SRC
		    joystick/bsd/SDL_sysjoystick.c
		)
	elseif(RISCOS)
		list(APPEND SDL_JOYSTICK_SRC
		    joystick/riscos/SDL_sysjoystick.c
		)
	elseif(IRIX)
		list(APPEND SDL_JOYSTICK_SRC
		)
	else()
		list(APPEND SDL_JOYSTICK_SRC
		    joystick/linux/SDL_sysjoystick.c
		)
	endif()
elseif(APPLE)
	if (DARWIN)
		list(APPEND SDL_JOYSTICK_SRC
		    joystick/darwin/SDL_sysjoystick.c
		)
	elseif(MACOSX)
	else()
		list(APPEND SDL_JOYSTICK_SRC
		    joystick/macos/SDL_sysjoystick.c
		)
	endif()
endif()

# ------------------ LOADSO ------------------

set(SDL_LOADSO_DISABLED OFF CACHE BOOL "Disable support for dynamic-library-loading subsystem")

set(SDL_LOADSO_SRC
    loadso/dummy/SDL_sysloadso.c
)

if (MINT)
	list(APPEND SDL_LOADSO_SRC
	    loadso/mint/SDL_sysloadso.c
	)
endif()

if (WIN32)
	list(APPEND SDL_LOADSO_SRC
	    loadso/win32/SDL_sysloadso.c
	)
elseif(UNIX AND NOT APPLE)
	if(BEOS)
		list(APPEND SDL_LOADSO_SRC
		    loadso/beos/SDL_sysloadso.c
		)
	elseif(DREAMCAST)
		list(APPEND SDL_LOADSO_SRC
		)
	elseif(OS2)
		list(APPEND SDL_LOADSO_SRC
		    loadso/os2/SDL_sysloadso.c
		)
	elseif(BSD)
		list(APPEND SDL_LOADSO_SRC
		)
	elseif(IRIX)
		list(APPEND SDL_LOADSO_SRC
		)
	else()
		list(APPEND SDL_LOADSO_SRC
		    loadso/dlopen/SDL_sysloadso.c
		)
	endif()
elseif (APPLE)
	if (DARWIN)
	elseif (MACOSX)
		list(APPEND SDL_LOADSO_SRC
		    loadso/macosx/SDL_dlcompat.c
		)
	else()
		list(APPEND SDL_LOADSO_SRC
		    loadso/macos/SDL_sysloadso.c
		)
	endif()
endif()

# ------------------ MAIN ------------------

set(SDL_MAIN_SRC
    main/dummy/SDL_dummy_main.c
)

if (WIN32)
	list(APPEND SDL_MAIN_SRC
	    main/win32/SDL_win32_main.c
	)
elseif (UNIX AND NOT APPLE)
	if(BEOS)
		list(APPEND SDL_MAIN_SRC
			main/beos/SDL_BeApp.cc
			main/qtopia/SDL_qtopia_main.cc
		)
	endif()
elseif (APPLE)
	if (DARWIN)
	elseif (MACOSX)
		list(APPEND SDL_MAIN_SRC
			main/macosx/SDLMain.m
		)
	else()
		list(APPEND SDL_MAIN_SRC
		    main/macos/SDL_main.c
		)
	endif()

elseif(SYMBIAN)
	list(APPEND SDL_MAIN_SRC
		main/symbian/EKA1/SDL_main.cpp
		main/symbian/EKA2/sdlexe.cpp
		main/symbian/EKA2/sdllib.cpp
		main/symbian/EKA2/SDL_main.cpp
		main/symbian/EKA2/vectorbuffer.cpp
	)
endif()

set(SDL_SRC
    SDL.c
    SDL_error.c
    SDL_fatal.c
)

# ------------------ STDLIB ------------------

set(SDL_STDLIB_SRC
    stdlib/SDL_getenv.c
    stdlib/SDL_iconv.c
    stdlib/SDL_malloc.c
    stdlib/SDL_qsort.c
    stdlib/SDL_stdlib.c
    stdlib/SDL_string.c
)

# ------------------ THREAD ------------------

set(SDL_THREAD_DISABLED OFF CACHE BOOL "Disable support for thread management subsystem")

set(SDL_THREAD_SRC
    thread/SDL_thread.c
)

if (PTH)
	list(APPEND SDL_THREAD_SRC
		thread/pth/SDL_syscond.c
		thread/pth/SDL_sysmutex.c
		thread/pth/SDL_systhread.c
	)
endif()

if (WIN32)
	list(APPEND SDL_THREAD_SRC
	    thread/generic/SDL_syscond.c
	    thread/win32/SDL_sysmutex.c
	    thread/win32/SDL_syssem.c
	    thread/win32/SDL_systhread.c
	)
elseif(WINCE)
	list(APPEND SDL_THREAD_SRC
	    thread/win32/win_ce_semaphore.c
	)
elseif(UNIX AND NOT APPLE)
	find_package(Threads)
	
	if (CMAKE_USE_PTHREADS_INIT)
		list(APPEND SDL_THREAD_SRC
			thread/pthread/SDL_syscond.c
			thread/pthread/SDL_sysmutex.c
			thread/pthread/SDL_syssem.c
			thread/pthread/SDL_systhread.c
		)
	else()
		list(APPEND SDL_THREAD_SRC
			thread/generic/SDL_sysmutex.c
			thread/generic/SDL_systhread.c
			thread/generic/SDL_syssem.c
			thread/generic/SDL_syscond.c
		)
	endif()
	

	if(BEOS)
		list(APPEND SDL_THREAD_SRC
		    thread/beos/SDL_syssem.c
		    thread/beos/SDL_systhread.c
		)
	elseif(DREAMCAST)
		list(APPEND SDL_THREAD_SRC
		    thread/dc/SDL_syscond.c
		    thread/dc/SDL_sysmutex.c
		    thread/dc/SDL_syssem.c
		    thread/dc/SDL_systhread.c
		)
	elseif(OS2)
		list(APPEND SDL_THREAD_SRC
		    thread/os2/SDL_syscond.c
		    thread/os2/SDL_sysmutex.c
		    thread/os2/SDL_syssem.c
		    thread/os2/SDL_systhread.c
		)
	elseif(BSD)
		list(APPEND SDL_THREAD_SRC
		)
	elseif(IRIX)
		list(APPEND SDL_THREAD_SRC
		    thread/irix/SDL_syssem.c
		    thread/irix/SDL_systhread.c
		)
	elseif(RISCOS)
		list(APPEND SDL_THREAD_SRC
		    thread/riscos/SDL_syscond.c
		    thread/riscos/SDL_sysmutex.c
		    thread/riscos/SDL_syssem.c
		    thread/riscos/SDL_systhread.c
		)
	else()
		list(APPEND SDL_THREAD_SRC
		)
	endif()
elseif (APPLE)
	if (DARWIN)
	elseif (MACOSX)
	else()
	endif()
elseif(SYMBIAN)
	list(APPEND SDL_THREAD_SRC
		thread/symbian/SDL_sysmutex.cpp
		thread/symbian/SDL_syssem.cpp
		thread/symbian/SDL_systhread.cpp
	)
endif()

# ------------------ TIMER ------------------

set(SDL_TIMER_DISABLED OFF CACHE BOOL "Disable support for timer subsystem")

set(SDL_TIMER_SRC
    timer/dummy/SDL_systimer.c
    timer/SDL_timer.c
)

if (MINT)
	list(APPEND SDL_TIMER_SRC
	    timer/mint/SDL_systimer.c
	)
endif()

if (NDS)
	list(APPEND SDL_TIMER_SRC
	    timer/nds/SDL_systimer.c
	)
endif()

if (WIN32)
	list(APPEND SDL_TIMER_SRC
	    timer/win32/SDL_systimer.c
	)
elseif(WINCE)
	list(APPEND SDL_TIMER_SRC
	    timer/wince/SDL_systimer.c
	)
elseif(UNIX AND NOT APPLE)
	list(APPEND SDL_TIMER_SRC
	    timer/unix/SDL_systimer.c
	)

	if(BEOS)
		list(APPEND SDL_TIMER_SRC
		    timer/beos/SDL_systimer.c
		)
	elseif(DREAMCAST)
		list(APPEND SDL_TIMER_SRC
		    timer/dc/SDL_systimer.c
		)
	elseif(OS2)
		list(APPEND SDL_TIMER_SRC
		    timer/os2/SDL_systimer.c
		)
	elseif(BSD)
		list(APPEND SDL_TIMER_SRC
		)
	elseif(IRIX)
		list(APPEND SDL_TIMER_SRC
		)
	elseif(RISCOS)
		list(APPEND SDL_TIMER_SRC
		    timer/riscos/SDL_systimer.c
		)
	else()
		list(APPEND SDL_TIMER_SRC
		)
	endif()
elseif (APPLE)
	if (DARWIN)
	elseif (MACOSX)
	else()
		list(APPEND SDL_TIMER_SRC
		    timer/macos/FastTimes.c
		    timer/macos/SDL_MPWtimer.c
		    timer/macos/SDL_systimer.c
		)
	endif()
elseif(SYMBIAN)
	list(APPEND SDL_TIMER_SRC
		timer/symbian/SDL_systimer.cpp
	)
endif()

# ------------------ VIDEO ------------------

set(SDL_VIDEO_DISABLED OFF CACHE BOOL "Disable support for video subsystem")

set(SDL_VIDEO_SRC
    video/dummy/SDL_nullevents.c
    video/dummy/SDL_nullmouse.c
    video/dummy/SDL_nullvideo.c
    video/SDL_blit.c
    video/SDL_blit_0.c
    video/SDL_blit_1.c
    video/SDL_blit_A.c
    video/SDL_blit_N.c
    video/SDL_bmp.c
    video/SDL_cursor.c
    video/SDL_gamma.c
    video/SDL_pixels.c
    video/SDL_RLEaccel.c
    video/SDL_stretch.c
    video/SDL_surface.c
    video/SDL_video.c
    video/SDL_yuv.c
    video/SDL_yuv_mmx.c
    video/SDL_yuv_sw.c
)

if (NDS)
	list(APPEND SDL_VIDEO_SRC
	    video/nds/SDL_ndsevents.c
	    video/nds/SDL_ndsmouse.c
	    video/nds/SDL_ndsvideo.c
	)
endif()

if (GGI)
	list(APPEND SDL_VIDEO_SRC
	    video/ggi/SDL_ggievents.c
	    video/ggi/SDL_ggimouse.c
	    video/ggi/SDL_ggivideo.c
	)
endif()

if (PICOGUI)
	list(APPEND SDL_VIDEO_SRC
	    video/picogui/SDL_pgevents.c
	    video/picogui/SDL_pgvideo.c
	)
endif()

if (SDL_VIDEO_DRIVER_AALIB)
	list(APPEND SDL_VIDEO_SRC
	    video/aalib/SDL_aaevents.c
	    video/aalib/SDL_aamouse.c
	    video/aalib/SDL_aavideo.c
	)
endif()

if (SDL_VIDEO_DRIVER_CACA)
	list(APPEND SDL_VIDEO_SRC
	    video/caca/SDL_cacaevents.c
	    video/caca/SDL_cacavideo.c
	)
endif()

if (GAPI)
	list(APPEND SDL_VIDEO_SRC
	    video/gapi/SDL_gapivideo.c
	)
endif()

if (ATARI)
	list(APPEND SDL_VIDEO_SRC
	    video/ataricommon/SDL_ataridevmouse.c
	    video/ataricommon/SDL_atarievents.c
	    video/ataricommon/SDL_atarigl.c
	    video/ataricommon/SDL_atarimxalloc.c
	    video/ataricommon/SDL_biosevents.c
	    video/ataricommon/SDL_gemdosevents.c
	    video/ataricommon/SDL_ikbdevents.c
	    video/ataricommon/SDL_xbiosevents.c

    	video/gem/SDL_gemevents.c
	    video/gem/SDL_gemmouse.c
	    video/gem/SDL_gemvideo.c
	    video/gem/SDL_gemwm.c

	    video/xbios/SDL_xbios.c
	    video/xbios/SDL_xbios_blowup.c
	    video/xbios/SDL_xbios_centscreen.c
	    video/xbios/SDL_xbios_milan.c
	    video/xbios/SDL_xbios_sb3.c
	    video/xbios/SDL_xbios_tveille.c
	)
endif()

if (PLAYSTATION)
	if (PS2)
		list(APPEND SDL_VIDEO_SRC
		    video/ps2gs/SDL_gsevents.c
		    video/ps2gs/SDL_gsmouse.c
		    video/ps2gs/SDL_gsvideo.c
		    video/ps2gs/SDL_gsyuv.c
		)
	elseif(PS3)
		list(APPEND SDL_VIDEO_SRC
		    video/ps3/SDL_ps3events.c
		    video/ps3/SDL_ps3video.c
		    video/ps3/SDL_ps3yuv.c
		    video/ps3/spulibs/bilin_scaler.c
		    video/ps3/spulibs/fb_writer.c
		    video/ps3/spulibs/yuv2rgb_converter.c
		)
	endif()
endif()

if (WIN32)
	list(APPEND SDL_VIDEO_SRC
	    video/wincommon/SDL_sysevents.c
	    video/wincommon/SDL_sysmouse.c
	    video/wincommon/SDL_syswm.c
	    video/wincommon/SDL_wingl.c
	    video/windib/SDL_dibevents.c
	    video/windib/SDL_dibvideo.c
	    video/windx5/SDL_dx5events.c
	    video/windx5/SDL_dx5video.c
	    video/windx5/SDL_dx5yuv.c
	)
elseif(UNIX AND NOT APPLE)
	find_package(SVGAlib)
	find_package(DirectFB)
	find_package(FBcon)
	find_package(NanoX)
	find_package(X11)
	
	if (SVGALIB_LIBRARY)
		list(APPEND SDL_VIDEO_SRC
			video/svga/SDL_svgaevents.c
			video/svga/SDL_svgamouse.c
			video/svga/SDL_svgavideo.c
		)
	endif()
	
	if (VGL)
		list(APPEND SDL_VIDEO_SRC
		    video/vgl/SDL_vglevents.c
		    video/vgl/SDL_vglmouse.c
		    video/vgl/SDL_vglvideo.c
		)
	endif()

	if(BEOS)
		list(APPEND SDL_VIDEO_SRC
			video/bwindow/SDL_sysevents.cc
			video/bwindow/SDL_sysmouse.cc
			video/bwindow/SDL_sysvideo.cc
			video/bwindow/SDL_syswm.cc
			video/bwindow/SDL_sysyuv.cc

			video/qtopia/SDL_QPEApp.cc
			video/qtopia/SDL_QWin.cc
			video/qtopia/SDL_sysevents.cc
			video/qtopia/SDL_sysmouse.cc
			video/qtopia/SDL_sysvideo.cc
			video/qtopia/SDL_syswm.cc
		)
	elseif(DREAMCAST)
		list(APPEND SDL_VIDEO_SRC
		    video/dc/SDL_dcevents.c
		    video/dc/SDL_dcmouse.c
		    video/dc/SDL_dcvideo.c
		)
	elseif(OS2)
		list(APPEND SDL_VIDEO_SRC
		    video/os2fslib/SDL_os2fslib.c
		)
	elseif(BSD)
		list(APPEND SDL_VIDEO_SRC
		    video/wscons/SDL_wsconsevents.c
		    video/wscons/SDL_wsconsmouse.c
		    video/wscons/SDL_wsconsvideo.c
		)
	elseif(IRIX)
		list(APPEND SDL_VIDEO_SRC
		)
	elseif(QNX)
		list(APPEND SDL_VIDEO_SRC
		    video/photon/SDL_phyuv.c
		    video/photon/SDL_ph_events.c
		    video/photon/SDL_ph_gl.c
		    video/photon/SDL_ph_image.c
		    video/photon/SDL_ph_modes.c
		    video/photon/SDL_ph_mouse.c
		    video/photon/SDL_ph_video.c
		    video/photon/SDL_ph_wm.c
		)
	elseif(RISCOS)
		list(APPEND SDL_VIDEO_SRC
		    video/riscos/SDL_riscosevents.c
		    video/riscos/SDL_riscosFullScreenVideo.c
		    video/riscos/SDL_riscosmouse.c
		    video/riscos/SDL_riscossprite.c
		    video/riscos/SDL_riscostask.c
		    video/riscos/SDL_riscosvideo.c
		    video/riscos/SDL_wimppoll.c
		    video/riscos/SDL_wimpvideo.c
		)
	else()
		if (DIRECTFB_LIBRARY)
			list(APPEND SDL_VIDEO_SRC
				video/directfb/SDL_DirectFB_events.c
				video/directfb/SDL_DirectFB_video.c
				video/directfb/SDL_DirectFB_yuv.c
			)
		endif()
		if (USE_FBCON)
			list(APPEND SDL_VIDEO_SRC
				video/fbcon/SDL_fb3dfx.c
				video/fbcon/SDL_fbelo.c
				video/fbcon/SDL_fbevents.c
				video/fbcon/SDL_fbmatrox.c
				video/fbcon/SDL_fbmouse.c
				video/fbcon/SDL_fbriva.c
				video/fbcon/SDL_fbvideo.c
			)
		endif()
		if (NANOX_LIBRARY)
			list(APPEND SDL_VIDEO_SRC
				video/nanox/SDL_nxevents.c
				video/nanox/SDL_nximage.c
				video/nanox/SDL_nxmodes.c
				video/nanox/SDL_nxmouse.c
				video/nanox/SDL_nxvideo.c
				video/nanox/SDL_nxwm.c
			)
		endif()
		if (X11_FOUND)
			list(APPEND SDL_VIDEO_SRC
				video/x11/SDL_x11dga.c
				video/x11/SDL_x11dyn.c
				video/x11/SDL_x11events.c
				video/x11/SDL_x11gamma.c
				video/x11/SDL_x11gl.c
				video/x11/SDL_x11image.c
				video/x11/SDL_x11modes.c
				video/x11/SDL_x11mouse.c
				video/x11/SDL_x11video.c
				video/x11/SDL_x11wm.c
				video/x11/SDL_x11yuv.c
			)
			add_definitions(-DSDL_VIDEO_DRIVER_X11)
		endif()
		
		list(APPEND SDL_VIDEO_SRC
			video/dga/SDL_dgaevents.c
			video/dga/SDL_dgamouse.c
			video/dga/SDL_dgavideo.c

			video/Xext/Xinerama/Xinerama.c
			video/Xext/XME/xme.c
			video/Xext/Xv/Xv.c
			video/Xext/Xxf86dga/XF86DGA.c
			video/Xext/Xxf86dga/XF86DGA2.c
			video/Xext/Xxf86vm/XF86VMode.c
		)
	endif()
elseif (APPLE)
	if (DARWIN)
	elseif (MACOSX)
		list(APPEND SDL_VIDEO_SRC
			video/quartz/SDL_QuartzEvents.m
			video/quartz/SDL_QuartzGL.m
			video/quartz/SDL_QuartzVideo.m
			video/quartz/SDL_QuartzWindow.m
			video/quartz/SDL_QuartzWM.m
		)
	elseif (IPOD)
		list(APPEND SDL_VIDEO_SRC
		    video/ipod/SDL_ipodvideo.c
		)
	else()
		list(APPEND SDL_VIDEO_SRC
		    video/maccommon/SDL_macevents.c
		    video/maccommon/SDL_macgl.c
		    video/maccommon/SDL_macmouse.c
		    video/maccommon/SDL_macwm.c
		    video/macdsp/SDL_dspvideo.c
		    video/macrom/SDL_romvideo.c
		)
	endif()
elseif(SYMBIAN)
	list(APPEND SDL_VIDEO_SRC
		video/symbian/EKA1/SDL_epocevents.cpp
		video/symbian/EKA1/SDL_epocvideo.cpp
		video/symbian/EKA2/dsa.cpp
		video/symbian/EKA2/dsa_new.cpp
		video/symbian/EKA2/dsa_old.cpp
		video/symbian/EKA2/SDL_epocevents.cpp
		video/symbian/EKA2/SDL_epocvideo.cpp
	)
endif()

set(SDL_SOURCES
	${SDL_AUDIO_SRC}
	${SDL_CDROM_SRC}
	${SDL_CPUINFO_SRC}
	${SDL_EVENTS_SRC}
	${SDL_FILE_SRC}
	${SDL_JOYSTICK_SRC}
	${SDL_LOADSO_SRC}
	${SDL_STDLIB_SRC}
	${SDL_THREAD_SRC}
	${SDL_TIMER_SRC}
	${SDL_VIDEO_SRC}
	${SDL_SRC}
)

source_group(audio FILES ${SDL_AUDIO_SRC})
source_group(cdrom FILES ${SDL_CDROM_SRC})
source_group(cpuinfo FILES ${SDL_CPUINFO_SRC})
source_group(events FILES ${SDL_EVENTS_SRC})
source_group(file FILES ${SDL_FILE_SRC})
source_group(joystick FILES ${SDL_JOYSTICK_SRC})
source_group(loadso FILES ${SDL_LOADSO_SRC})
source_group(stdlib FILES ${SDL_STDLIB_SRC})
source_group(thread FILES ${SDL_THREAD_SRC})
source_group(timer FILES ${SDL_TIMER_SRC})
source_group(video FILES ${SDL_VIDEO_SRC})

include_directories(./)

# -------------------------- CONFIG -----------------------------

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/include/SDL_config.h.in ${CMAKE_CURRENT_BINARY_DIR}/include/SDL_config.h @ONLY)

# ------------------- ADDITIONAL LIBRARIES ----------------------

set(SDL_LIBRARIES
)

if (SDL_VIDEO_DRIVER_AALIB)
	list(APPEND SDL_LIBRARIES
		aa
	)
endif()

if (SDL_VIDEO_DRIVER_CACA)
	list(APPEND SDL_LIBRARIES
		caca
	)
endif()

if (WIN32)
	list(APPEND SDL_LIBRARIES
		winmm.lib
		dxguid.lib
	)
elseif(UNIX AND NOT APPLE)
elseif(APPLE)
endif()

# -------------------------- SDL ----------------------------

add_library(SDL SHARED
	${SDL_SOURCES}
)

set_target_properties(SDL
    PROPERTIES
    ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib"
    LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib"
    RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
)

target_link_libraries (SDL
	${SDL_LIBRARIES}
)
