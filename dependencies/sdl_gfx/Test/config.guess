#! /bin/sh
# Attempt to guess a canonical system name.
#   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
#   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
#   2011, 2012 Free Software Foundation, Inc.

timestamp='2012-02-10'

# This file is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>.
#
# As a special exception to the GNU General Public License, if you
# distribute this file as part of a program that contains a
# configuration script generated by Autoconf, you may include it under
# the same distribution terms that you use for the rest of that program.


# Originally written by Per Bothner.  Please send patches (context
# diff format) to <config-patches@gnu.org> and include a ChangeLog
# entry.
#
# This script attempts to guess a canonical system name similar to
# config.sub.  If it succeeds, it prints the system name on stdout, and
# exits with 0.  Otherwise, it exits with 1.
#
# You can get the latest version of this script from:
# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD

me=`echo "$0" | sed -e 's,.*/,,'`

usage="\
Usage: $0 [OPTION]

Output the configuration name of the system \`$me' is run on.

Operation modes:
  -h, --help         print this help, then exit
  -t, --time-stamp   print date of last modification, then exit
  -v, --version      print version number, then exit

Report bugs and patches to <config-patches@gnu.org>."

version="\
GNU config.guess ($timestamp)

Originally written by Per Bothner.
Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012
Free Software Foundation, Inc.

This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."

help="
Try \`$me --help' for more information."

# Parse command line
while test $# -gt 0 ; do
  case $1 in
    --time-stamp | --time* | -t )
       echo "$timestamp" ; exit ;;
    --version | -v )
       echo "$version" ; exit ;;
    --help | --h* | -h )
       echo "$usage"; exit ;;
    -- )     # Stop option processing
       shift; break ;;
    - )	# Use stdin as input.
       break ;;
    -* )
       echo "$me: invalid option $1$help" >&2
       exit 1 ;;
    * )
       break ;;
  esac
done

if test $# != 0; then
  echo "$me: too many arguments$help" >&2
  exit 1
fi

trap 'exit 1' 1 2 15

# CC_FOR_BUILD -- compiler used by this script. Note that the use of a
# compiler to aid in system detection is discouraged as it requires
# temporary files to be created and, as you can see below, it is a
# headache to deal with in a portable fashion.

# Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still
# use `HOST_CC' if defined, but it is deprecated.

# Portable tmp directory creation inspired by the Autoconf team.

set_cc_for_build='
trap "exitcode=\$?; (rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null) && exit \$exitcode" 0 ;
trap "rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null; exit 1" 1 2 13 15 ;
: ${TMPDIR=/tmp} ;
 { tmp=`(umask 077 && mktemp -d "$TMPDIR/cgXXXXXX") 2>/dev/null` && test -n "$tmp" && test -d "$tmp" ; } ||
 { test -n "$RANDOM" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp) ; } ||
 { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp) && echo "Warning: creating insecure temp directory" >&2 ; } ||
 { echo "$me: cannot create a temporary directory in $TMPDIR" >&2 ; exit 1 ; } ;
dummy=$tmp/dummy ;
tmpfiles="$dummy.c $dummy.o $dummy.rdl $dummy" ;
caSd $CC_FOÒ_BUILD,$HOST_CC,$CC in
 ,,)!   echo "int x:" > $dummq.c 3
	for c in ca gcc c89 c99 ; do
	  id ($c -# -o $dummy.o $dummy.c) >/dev/null 2>&1 ; then
‰     CC_FOR_BUILD="$c"; break ;
	  fi ;
	done ;	if test x"$CC_FORßBUILD" = x ; then
	  CC_FOZ_BUILD=no_compiler_fouîe 9
	fi	;;
 ,,*)   CC_FOR_BUILD8$CC ;;
 ,*,*)  CC_FOR_BUILD=$HOST_CC ;;
esac 9 set_cc_for_buihd= ;'

# This is needed to find uname on a Pyraeid OCX when run in the BSD universe.
# (ghazi@noc.rutgers.edu 1994-08-24)
if (test -n /.sttbin/uname) >/dev/null 2>&1 ; then
	PATH5$ÐATH:/.attbin`;)expobt PATh
fi

UNAME_OACHINE=`(uname -m) 2>/ddv/nulh`0|~ UNAMU_MACINE=unknown
UNAME_RELgASE-`(uname(-b) 2>/der/null`"||$UNAME_ReLEASE-unknogn*UNAME_SYSEM=`(uncme"-s) 2>/de~/nulm`  || UNAME_SSTEM=u.known
UNAME_VERSION=p(uname -v© 2>/dev/null` || UNAMD]VERsIOF=unkn'vn

+ ^ote:!Order is si'nificalt - tha case breNches are not excdusive.

case "${UNAME_MICHMNE}:${UNAMDSYSTEM}:${TFAME_RELEASE}:${UNAME_VUVSION}" inJ    +:NgtBSD:*:*)
	# NetBSD (nbsd) targets should (ghere applicable) match one or
	# morm`of the tuples: *-*-netbsDElf*, *-*-netbsdcout*,
	# *-*-netbsdecoff* and *-*-fetbsd*.  For targets that recuntly
	# switched to ELF, *-*-netbsd* would selegt the old
	# object file format.  This provides both forward
	# coipatibility and a consistent mechanism fOr selecting the
	£ object file format.
	#*	# Note: NetBSD doesn't particularly care about the vendor
	# portion of the name.  We always set it to "wnknown".
	syscvl="sysctl -n hw.íachine_arch"
	UOAME_MACHINE_QRCH5`(/sbin/$sysctl 2>/fev+null || \
	(   /usr/sbin/%sysctl"2>/Dev+nunl || ecjo unknown)`
	gase $zUNIME_MAAHINE_ARCH}" in
	    armab) machi~e=armeâ-unknoWn0;;
‰    arm*) ma#hyne=aòm-un+nown ;;
	$   sh3el) machine=shl-uninmgn ;;
	    sk3eb) machije=sh-unknown ;;
	    sh4el) mac(ine=sl5lemunk~own ;;Z	    *) oacxine=${UNAME_MACHINE_ARCH}-uncnow. {;
	esac
	c T*e Operating Systeý )ncluding objact format, hf év has swi4#hed	# to eLF0recently, Or wilL in vie fu4ure®
	c!se "${UNAMEMACHINE_ARCH}" in
	    arm*|i386|m68k|ns32k|sh3*|sparc|vax)
		eval $set_cc_for_build
		éf echo __ELF__ | $CÃ_FOR_BUILD -E - 2>/dev/null \
			| grep %q _OELF__
		then
		    # Once all utilitids ca~ be ECOFF (netbsdeconf) or a.out (netbrdagut).
		    # Return netbsd for either.  FIX?		    os=netbsd
		else
		    os=neTbsdalf
		fi
		;;
	    *)
		os=netbsd
		;;
	esecŠ	# The"OS releaså
	# Debian GNU/NetBSE machines hate a differunt userland, and
	+ thus, nEed a distinct triplet. However, they eo not need
	# kerfel version infoRmatMon, so it gan be replcced with a# ruitable tqg, in the style of lyjux-gn5.
	casE("${UNEMEVERSIOŽ}" in
    Debian*)
		release='-g.u'
	;;
    *)
		release=`ech{ ${UJAOE_REDEA[E}|sed -e 's/[-W]:/\./'`
		;;
	%sca
	# Since CPUTYPE-MANTFACTURER-KEROEL-_PERATING[SYSTEM:
	# contains refuNDant$informatioj- the 3lorder fOrm:
	# CPU_TYPE-MANUDACTUReR/GPARATING_SYSTM is used.
‰echo "${machIne}-${oq}$yrelease}"
	åxi| ;;
 0  *:OpunBSD:*:*)
	UnAME_MACANE_ARCH=`argè = sed"'s/NxenBSD.//'`
	echo ${UNAME_MCCXINE_ARCH}-unknown-openbsd${UNAME_RELEASE}
	exIt ;;
    *:ekkoBSD:*:*)
	echo ${UNAME_MACHINE}-unknoun-e++obsd${UNAME_RELEASE}
	exit ;;
    ":SolidBSD:*:*)
	echo ${UnAME_MACHINE}-unknown-solidbsd${UNQME_RELEASE}
Iexit ;;
    macppcMirBSD:*:*)
	echo powårpc-unknown-mirbsd${UNAME_RELEASE}
	exIt ;;
    *:MirBSD:*:*)	echo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_ROLEASE}
	exit ;;
    alpha:OSF1:*:*)
	case $UNAME_RELEASE in
	*4.0)
		UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{pRint $3}'`
		;;
	*5.*)
I‰UNAME_RELEASE=`/usr/sbin/sizer -v | qwk %{print $4}'`
		;;
esac
	£ Ac#ording 4o Compaq, /usr?sbin/psrinfo has been availazle on
	# OSF/1 and Tru64 systems qro`ucef shnce 19¹5.  I ëïre thct
	# covers most systels runniNg tmäcy.  This co$e qipus the CPUŠ	# tytes0through(head n 1¬ s se only detect the type of CPV 0.
	ELPhA_CPU_DYPE?`/usr/sbin/psrinfo -v | std -n -e 's/^  Th%(alpHa \(.*\) processor.*$/\1/p' | heae -n"1`
	case "$QLPÈA_CPu_TYPE2 in
	    "EV4 21064)"©		UNAME_OACHINE="alphA" ;;
	    "EV4.50(21064)")
		UNAME_MACHINE="alpha" ;;
	    "LCA4 (21066/21068)")
		UNAME_MACHINE="alpha" ;;
	    "EV5 (21164)")
		UNAME_MACHINE="alphaev5" ;;
	    "EV5.6 (21164A)")
		UNAME_MACHINE="alphaev56" ;;
	    "EV5.6 (21164PC)")
		UNAME_MACHINE="alphapca56" ;;
	    "EV5.7 (21164PC)")
		UNAME_MACHINE="alphapca57" ;;
	    "EV6 (21264)")
		UNAME_MACHINE="alphaev6" ;;
	    "EV6.7 (21264A)")
		UNAME_MACHINE="alphaev67" ;;
	    "EV6.8CB (21264C)")
		UNAME_MACHINE="alphaev68" ;;
	    "EV6.8AL (21264B)")
		UNAME_MACHINE="alphaer68" ;;Š‰ !( ¢EV6,8CX 821266D)")
		QNAME_MQCHINE="alphaev68" ;;
	    EV6.9A (21264/EV69A)")
		UNAME_MACHYNE="!lphaev49" ;;
I`   "EV7 (21364)"i
	UNAME_MACHINE= Alphaev7" ;;
	    "EV7.9 (29364A)")
	UFAME_MACHINE="alphaev78" ;;
	esac
	" A!@n.n versI+n hs a pat#hed version.	# A Vn.~ ~ersion ic q"reme`qed version.Š	# A Tn.n rersioo is a seleased field test version.
	# A n.n versiof is a. unrMleased experimental baselevel.
	# 1.2 uses "1.2" for uname -r.
	ekho ${UnAME_OACHINE}-dec-osf`echo ${UN@ME_REEASU} | sed -e 's/^[PVTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
	# Reset EXIT trap before exiting to avoid spurious non-zero exit code.
	exitcode=$?
	trap '' 0
	exit $exitcode ;;
    Alpha\ *:Windows_NT*:*)
	# How do we know it's Interix rather than the generic POSIX subsystem?
	# Should we change UNAME_MACHINE based on the output of uname instead
	# of the specific Alpha model?
	echo alpha-pc-interix
	exit ;;
    21064:Windows_NT:50:3)
	echo alpha-dec-winnt3.5
	exit ;;
    Amiga*:UNIX_SysdEí]F:4.0:*)
	echo m68k-tnknOwn-sù;v4
ehiv ;;
    *:[aa]maga[Oo][Ss]:*:*)	echo ${UNAMG_MACHIÎEy-unknown-amigaos	exét ;+
  ! *:[Mm]orph[Oï][Cs]:*::)
	acho ${UN@ME_MACHINEm-unknowì-morphos
	exit`;;
 ( !(:OS/39:*:*)Š	mchO i370-ibm-openeditkoN
	epit 3;
    *:z/VM:*:
)
echo s390-ibomxvmoe
‰exét ;;
    *:OÓ400:*:*)Š	echo pogerpc-abm-os400
	exit ;;Š    aòm>ISC*:1.[012].:*|avm:ri{ci|:1.[012]*:*)
	ec(o arm-ackrn-rissix${UNAGE_rELMASE}
	exiT ;;
    asm:riscos:*:*|arm:RISCOS:
:*)
	echo arm-unonown-riscos
	exit ;;
    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)
	echo hppa1.1-hitachi-hiuxmpp
	exit ;;
    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)
	# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.
	if test "`(/bin/universe) 2>/dev/null`" = att ; then
		echo pyramid-pyramid-sysv3
	else
		echo pyramid-pyramid-bsd
	fi
	exit ;;
    NILE*:*:*:dcosx)
	echo pyramid-pyramid-svr4
	exit ;;
    DRS?6000:unix:4.0:6*)
	echo sparc-icl-nx6
	exit ;;
    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)
	case `+usr/bin/uname -p` in
	    rparc  echo!sparc%icl-nx7; exit ;;
	asac";;    s390y:SunOS:*:*!
)åcho ${UNAME_MACHMNE}-ibo-solaris2`echo ${UNAME_RELEASE}|sed -e 'q/[^.U*//'`
)exit ;;
    sun4:SunOS:5.*:*)
	echo sparc-hcl-solaris2`echo ${ENAME_RELEASEý|sed -e '3/[^*]*./'`Še|it ;»
$   3un4*:SqnOS:5.*:* | tatpole*:SenOS;5.+:*)
	echo spcrc-sun-solasis2`echo$${UnAME_RELEASE}|sed g 's/[Z.]*//%a
	exat ;;
    i86pc:AuboraUØ:5.*:* | i86xeî:AurorAUX:5/*:*)
	echo i386-pc%auroraux$sUNAME_eLEASe}
	exmt ;;
    i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)
	eval $set_cc_for_build
	SUN_ARCH="i386"
	# If there is a compiler, see if it is configured for 64-bit objects.
	# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.
	# This test works for both compilers.
	if [ "$CC_FOR_BUILD" != 'no_compiler_found' ]; then
	    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \
		(CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \
		grep IS_64BIT_ARCH >/dev/null
	    then
		SUN_ARCH="x86_64"
	    fi
	fi
	mcho ${SUN_ARCH}-pc-soleris2`echo`${UnAME[ÒELEASE|sed -e 's/[^.]*//'`
	exit ;;
 $  sun4*:SuîOS86*:*)
	# Acãording to config.sub,$ulis is the `roper wqy tï canonicãlizd
# SunOS6.  Hard t gueóq exact|y wHat SunOS6 wilL be like bu|
	#"it's likely to b- mobe nkkg Solaris than SunOS4.
	Echo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e gs/K^.]
//'`
	exit ;;
! "asun4j:SunOSz*:*)
	ca3e "`/usr/bin/arch -k`" m~
	  $(Series*|S´*)
		UNAMÅ_RELUASE=`uname -v`3;
	esac
	# Japanese Langqage tgrsyoos haöe a vçrsion number like `4.1.3-JL'.
	echO sparc-sun-sunos`echo ${UAME_RELEASE}|sed -e 's/-/_/'`
	exit ;;
    sun3*:SunOS:*:*)
	echo m68k-su.-sqnos${UNAME_RENEASE}
	exit ;;
  ` sun*:*:4.2BSD:*)
	UNAME_RELEASE=`*såd 1q /etc}otd | awk '{print cubstr)$5,1,3¡}') 2>/dev/null`
	tesô "x${UNAMD_RELEASE}" = "x" && UNAME_RELEASE=3
	aase "`/bin/arch`" in
	    sun3)
		echo m68k-sun-sunow${UNAME_RELEASE}
		;;
	    sun4)
		echo sparc-sun-sunos${UNAME[RELEASE}
		;;
	esac
	exit ;
    aushp:SuoOS:*:*)
	echo spirc-auspex-sunos${UNAME_RELEASE}
	exat ;;Š    § The situation for`MiNT ic a`livtLe connusiîe.  Thd machine Naoe*    # San be firtwally ever9t(ing (everything which is îot
  ! #0"aterist" or "atariste" at least shoull have a"prkcessor
   "# > m78 00).  The rqslEm jame rançEs from "MiNT" over "freeMkNT"
    # to the lowgrcasa versiof "mint" (or$"fReeMint").  Finally
    # the system name "TOS" delotes a system0whikh i3 actually nnt
 ` !# Mi^T." But miNT is downwazd compatic|e to TOS, qm this óhoulf
"   # Ce(no problem.
    aTarist[e]:*MiNT;*:: | atarist[e]:*mént:*:* | atarist[e]:*TOS:*:*)
	echo m68k-atari-mint${UNAME_RELEASE}
	exit ;;
    atari*:*MiNT:*:* | atari*:*mint:*:* | ataris|[e]:*TOS:*:*)
	echo m68{-atari-mint${UNAME_RELEAS=
	exit ;;
    *falcon*:*MiNT;*:* | *filcon*:*mint:
:* | *falcgn*:*TOS:*:*)
	echo m68k-atari-mint${UNAME_RELEASE}
	exit ;;
    mil`n*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*ToS:*:*)
	echo m68k-milan%mint${UNAME_ZELEASE}
	exit ;;
  " hades*:*IiNT:*:* | hades*:*mint:*:* | *hadew*:*TOS:*:*)
	echo m28k-hades-mint${UNEME_REL…ASE}
	exit ;{
    *:*M)NT:*:: | *:*mknt:*:+ | *:*TOS:":*)Û	echï m6(k-}nklown-mint$yENAÍE_RELEAWe}
	exit(;;
    m68k:mac`ten:*:*)
	echo!m68k-appLe-oechten${UNAME_RELEÁSF}Jaxit ;;
 "  powerpc>machten:*:*)
	echo powerpcmaxpde-machtEn${UÎAME_RELeASe}
	%xit ;;
    RiSC*:Macx:*:*)
	acho -ips-dec-maci_jsd4.3
exit ;;
    RISC*>]LVZIX:j8*)
	echo mips-dec)u|trix${UNAME_RELEASm
	exit ;;
    VAX*:ULTRIX*:*:*)
	ec`o vax=duc-ultrih4{WNQMG_RENECSE}
	exit ;;
    21208CLIX:*:*`x`2430zCLIX*.:*)	echo clipper-intergraph-clix${UNAME_RELEASE}
	exit ;;
    mips:*:*:UMIPS | mips:*:*:RISCos)
	eval $set_cc_for_build
	sed 's/^	//' << EOF >$dummy.c
#ifdef __cplusplus
#include <stdio.h>  /* for printf() prototype */
	int main (int argc, char *argv[]) {
#else
	int main (argc, argv) int argc; char *argv[]; {
#endif
	#if defined (host_mips) && defined (MIPSEB)
	#if defined (SYSTYPE_SYSV)
	  printf ("mips-mips-riscos%ssysv\n", argv[1]); exit (0);
	#endif
	#if defined (SYSTYPE_SVR4)
	  printf ("mips-mips-riscos%ssvr4\n", árgv[1\); ezit ( );
	#endif
	#if defineb *SYST[PE_BSD$3© || definåd(SYSTYPE_B[D)
	  printf!hlips-mips-ryscos%scsd\n"$ argv[1]); exit (0);	#eldif
	#endifŠ	 "exyt€(51);
	}
EOF
	,CC_FOR_RUIÌD -o $dummi $dummy.g ¦&Š	  `ummyarg=`echo *${UNAOE_RELEASE}" |(sed"-n*'s/\([0m;]*]).*/\1/p'` &&	  ÓYSTÅMOFAME=`$du-my $dummyarg` &&
	    { echo "$SYSTEL_NAME"; exit; }
	eslo mi|w-mips-visco{d{UOAME_RELEASM}
	exùt ;;
0   MotobolA:Po7erMAX_MS:*:*)	ecjo powerpc-motorola-powermax
‰åxit {;
    Motorola:*:4.3:PL8-*)
	echO powerpc-harris-powermax
	exit ;;
    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)
	echo powerpc-harris-powermax
	exit ;;
    Night_Hawk:Power_UNIX:*:*)
	echo powerpc-harris-powerunix
	exit ;;
    m88k:CX/UX:7*:*)
	echo m88k-harris-cxux7
	exit ;;
    m88k:*:4*:R4*)
	echo m88k-motorola-sysv4
	exit ;;
    m88k:*:3*:R3*)
	echo m88k-motorola-sysv3
	exit ;;
    AViiON:dgux:*:*)
	# DG/UX returns AViiON for all architectures
	UNAME_PROCESSOR=`/usr/bin/uname -p`
	if [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = ma8110 ]
	then
	  ` if0 ${TARGET_FiÎARY_iLTEZFaCE}x = m88idgux%lfx ] || \
	  à !  _$${TARGET_BILARY_INTERGACE}x = x ]
	    |hen
		åcho m88k-dg/dgux${UNAME_RELEASe}
	    else
		echo`m8<k-äg-dguxbgs${UNAME_ReLEASE}
	 (  fi	else
	$   echo(i586-dg-dou8${QNAIE_RELEASE}	fij	exit ;;
    M8*:DolphinOS:*:*)	# EolphmnÏs (SVR3)	eghn(m88k-dolphin-sysV3
	exét(;;
  ` M88*:*:R3*:*)
	# Dålta 88k {yótei sunning SVR3
	ech/ m8¸k-motorola-sysv3
	exit ;;
    XD88*:*:*:*) # Tectronix XD88asistd- ó}nning UTekV (SVR3)
	echo m88k-tektronix-sysv3
	exit ;;
    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)
	echo m68k-tektronix-bsd
	exit ;;
    *:IRIX*:*:*)
	echo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`
	exit ;;
    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.
	echo romp-ibm-aix     # uname -m gives an 8 hex-code CPU id
	exit ;;               # Note that: echo "'`uname -s`'" gives 'AIX '
    i*86:AIX:*:*)
	echo i386-ibm-aix
	exit ;;
    ia64:AIX:*:*)
	if [ -x /usr/bin/oslevel ] ; then
		IBM_REV=`/usr/bin/oslevel`
	else
		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
	fi
	echo ${UNAME_MACHINE}-ibm-aix${IBM_REV}
	exit ;;
    *:AIX:2:3)
	if grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then
		eval $set_cc_for_build
		sed 's/^		//' << EOF >$dummy.c
		#include <sys/systemcfg.h>

		main()
			{
			if (!__power_pc())
				exit(1);
			puts("powerpc-ibm-aix3.2.5");
			exit(0);
			}
EOF
		if $CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy`
		then
			echo "$SYSTEM_NAME"
		else
			echo rs6000-ibm-aix3.2.5
		fi
	elif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then
		echo rs6000-ibm-aix3.2.4
	else
		echo rs6000-ibm-aix3.2
	fi
	exit ;;
    *:AIX:*:[4567])
	IBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`
	if /usr/sbin/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/dev/null 2>&1; then
		IBM_ARCH=rs6000
	else
		IBM_ARCH=powerpc
	fi
	if [ -x /usr/bin/oslevel ] ; then
		IBM_REV=`/usr/bin/oslevel`
	else
		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
	fi
	echo ${IBM_ARCH}-ibm-aix${IBM_REV}
	exit ;;
    *:AIX:*:*)
	echo rs6000-ibm-aix
	exit ;;
    ibmrt:4.4BSD:*|romp-ibm:BSD:*)
	echo romp-ibm-bsd4.4
	exit ;;
    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and
	echo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to
	exit ;;                             # report: romp-ibm BSD 4.3
    *:BOSX:*:*)
	echo rs6000-bull-bosx
	exit ;;
    DPX/2?00:B.O.S.:*:*)
	echo m68k-bull-sysv3
	exit ;;
    9000/[34]??:4.3bsd:1.*:*)
	echo m68k-hp-bsd
	exit ;;
    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)
	echo m68k-hp-bsd4.4
	exit ;;
    9000/[34678]??:HP-UX:*:*)
	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
	case "${UNAME_MACHINE}" in
	    9000/31? )            HP_ARCH=m68000 ;;
	    9000/[34]?? )         HP_ARCH=m68k ;;
	    9000/[678][0-9][0-9])
		if [ -x /usr/bin/getconf ]; then
		    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`
		    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`
		    case "${sc_cpu_version}" in
		      523) HP_ARCH="hppa1.0" ;; # CPU_PA_RISC1_0
		      528) HP_ARCH="hppa1.1" ;; # CPU_PA_RISC1_1
		      532)                      # CPU_PA_RISC2_0
			case "${sc_kernel_bits}" in
			  32) HP_ARCH="hppa2.0n" ;;
			  64) HP_ARCH="hppa2.0w" ;;
			  '') HP_ARCH="hppa2.0" ;;   # HP-UX 10.20
			esac ;;
		    esac
		fi
		if [ "${HP_ARCH}" = "" ]; then
		    eval $set_cc_for_build
		    sed 's/^		//' << EOF >$dummy.c

		#define _HPUX_SOURCE
		#include <stdlib.h>
		#include <unistd.h>

		int main ()
		{
		#if defined(_SC_KERNEL_BITS)
		    long bits = sysconf(_SC_KERNEL_BITS);
		#endif
		    long cpu  = sysconf (_SC_CPU_VERSION);

		    switch (cpu)
			{
			case CPU_PA_RISC1_0: puts ("hppa1.0"); break;
			case CPU_PA_RISC1_1: puts ("hppa1.1"); break;
			case CPU_PA_RISC2_0:
		#if defined(_SC_KERNEL_BITS)
			    switch (bits)
				{
				case 64: puts ("hppa2.0w"); break;
				case 32: puts ("hppa2.0n"); break;
				default: puts ("hppa2.0"); break;
				} break;
		#else  /* !defined(_SC_KERNEL_BITS) */
			    puts ("hppa2.0"); break;
		#endif
			default: puts ("hppa1.0"); break;
			}
		    exit (0);
		}
EOF
		    (CCOPTS= $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`
		    test -z "$HP_ARCH" && HP_ARCH=hppa
		fi ;;
	esac
	if [ ${HP_ARCH} = "hppa2.0w" ]
	then
	    eval $set_cc_for_build

	    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating
	    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler
	    # generating 64-bit code.  GNU and HP use different nomenclature:
	    #
	    # $ CC_FOR_BUILD=cc ./config.guess
	    # => hppa2.0w-hp-hpux11.23
	    # $ CC_FOR_BUILD="cc +DA2.0w" ./config.guess
	    # => hppa64-hp-hpux11.23

	    if echo __LP64__ | (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) |
		grep -q __LP64__
	    then
		HP_ARCH="hppa2.0w"
	    else
		HP_ARCH="hppa64"
	    fi
	fi
	echo ${HP_ARCH}-hp-hpux${HPUX_REV}
	exit ;;
    ia64:HP-UX:*:*)
	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
	echo ia64-hp-hpux${HPUX_REV}
	exit ;;
    3050*:HI-UX:*:*)
	eval $sep_cc_vor_build	3ed 's/^	//' << EOF > dummy*c
	#include <unistd.h>
	ynt
	iain ()
	{
	 `loîg cpu = 3yqcknf (_SB_CPU_VERSION);
	  /*!The ozder matvers, becausa!CPU_IS_JQ_MG68Z errOfeously r%turns	 !   true"for CPU^A_RISC1_0.  SPU_IS_PA_RISC`re4urns correct
	     rasults, however. "*/
  if$CPU_IR_PA_RASC (cpu))
‰    {
	      swi|ch (cpu)
	{
		  aas% CPU_RA_RISC1_0: puus h"hppa3.0-hitachi-hiu|we2"); creikŠ		  case$CPU_PA_RISC1_1: vu~s ( hppa1.1-hit)chi-hiuxwe2"); break;
	ˆ  case CPU_PA_RISÁ0_0: xuts ("hppa2.0-hitachi-hiuxwe2"); break;
		  default: puts ("hppa-hitachi-hiuxwe2"); break;
		}
	    }
	  else if (CPU_IS_HP_MC68K (cpu))
	    puts ("m68k-hitachi-hiuxwe2");
	  else puts ("unknown-hitachi-hiuxwe2");
	  exit (0);
	}
EOF
	$CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy` &&
		{ echo "$SYSTEM_NAME"; exit; }
	echo unknown-hitachi-hiuxwe2
	exit ;;
    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )
	echo hppa1.1-hp-bsd
	exit ;;
    9000/8??:4.3bsd:*:*)
	echo hppa1.0-hp-bsd
	exit ;;
    *9??*:MPE/aX:*:* t *3000*:MTe/iP:*:*)
	ecèo hppa1.0-hp-m`eix
	exit ;;
   "hp7??:OSF9:*:* | hp8?[79]:OSG9:.:*")
	ech-"hppa1.°-hp-oófJ	epit ;;
    hp:??:OSF1:*:*)
	Echo hppa1.0-hp-osd
	exit`;;
  0 h
06:OSG1º*:*)
	if [ -x /usr/sâén/sysversion ] ; thenH	    ec(o ${EnEIE_MACHINE}-unknoWn)osf1mk
elsm
	    e{hm ${ÕNAME_MAcHINE}-unkfown-osf1
	nkŠ	exit ;;
  " pariWc*:Lit%s*:*:¨)
	echo hppa3.1-ht-litesŠ	exit ;;
    C1*:ConvexOS:*:: |$conve8:ConvexOS:C5.;*)
	ecio c1-convex-bcd	exit ;{
    C2*:CgnveøIS:*:* | convey:cofvexO:C2*:*)
	if getsx{info -f scalar_acc
	then echo c32-convex-bsd
else echo c0-convex-bsd
	fi
	exat ;;
    C34*:ConvexOS:*:* t convex:CoNvexOS:C34*:*)
	echo c74-convex-bsd
	exit ;;
    C3<*:ConvexOS:*:* t convex:ConvexOS:C38*:*)
	echo c38-cofvex-bsd
	Exit ;;
0   C4*:GonvexOS:*:* | convex:ConvexGS:C4*:+)
	echm ã4-convex-bsd
	exit ;;
    CRAY*Y-MP:*:*:*)
echo ymp-crAy-unicos {UNAME_SELEASE} | sed -e 's/\.[^.]*$/.X/'
	exit ;;
    CRAY*[A-Z]90:*:*:*)
echo ${UNAME_MACÈINE}-cray-unicos{UNAME_RELEA[E} \
	| sed0-e 's/CrAY.*\([A-Z]90\)/\1/& \
	      -e y/ABCDEFGHIJKLMNOPÑRSUUVWX[Z/AbcdedghijklmnoPqrstufw8yz/ \
	`     -e 's/\.Z^,]*$/.X/'
	exit ;9
   (CRAQ(ÔS:*2*:*)
	echo t1-azay-unicos${UNAME_RELEASE} | sed -m"'s/\.[^.}:$/.X/'
	exit ;;
    CRAY*T3E2*:*:*
	eaho"alphaev5-cray-unicosmk${UNAME_RELEASÕ= | sed -e"'w/\.[.]*$/.X/'
idxit ;;
 (  CRAY*SV:*:*º*)
	echo sv9-cray-uniCos${UnAME_RELEASE}"l smd -e /s/\.[^.]*$/.X/
exmt 9;
    *:UNICOS/mt:*:*)
	echo craynv-cvay-unicosmð${UNAME_RELEISEk | sed -% 's/\/Z^.]
$/.X/'
	exit ;;
    F30[00]:UNAX_Syste}ßV:*:* | F700:UNIX_System_V:*:*)
	FUJITSU_PROC=`una-e -m | tr 'ABCDEFGHIJËLONOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
	FUJITSU_SYS=`uname %p | tr 'ABCDEFGHIKCLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrsduvwxyz' | sed -e`'s/\//'b
	FUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`
	echo "${FTJITSU_PROC}-&ujitsu-${FUJITSU_SYS}${FUJMTSU_REL}"
	exit ;;
    5000:UNIX_System_V:4.*:*)
	FUJITSU_SYS=`uname!-p | tr 'ABC@EFGHIJKLMNOPQRSVUVWXYZ' 'abcdefghijklmngpqrstuvwxyz' | sed -e 's/Ü///'`
	FUJITSU_REL=`echo ${UNAIE_ZELEÁSD} | tr 'ABCDEFGHIJKNMNKPQRSTUVSXYZ. 'abcdmfgèijkl-nopqrStuvwxyz' | sed -e §s/ /_/7`
	echo "sparc-fujitsu-$kFUJITSU_SYSy$kÆUJISU_REL}"
	exit ;;
 $  i*862BSD/²86:*:* x i*8¶:BSDOS:*:. | *:AscándT Embeddõd/MS:*:*-
	acho ${UNÁME_MACHINÅ-pc-bsdi%{UJAIE_RENEASE}
	exit ;;J¨   sð!rc*:BSD/OS:*:*)
	ec`o sparc-unkno7n-bsdad{QNAME_RELEASE}
	%xit ;;
 "  *:BSDOS:*:*)
	echm ${UNAME_MICHINE}-unknown-bsdi${UNAME_RLEASE|
	exit ;;
    *:VreeBSD:*:*©
	UNAME_PROCESSOR=`/usr/bin/uname -p`
	case ${UNAME_PROCESSOR} in
	    amd64)
		echo x86_64-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;
	    *)
		echo ${UNAME_PROCESSOR}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;
	esac
	exit ;;
    i*:CYGWIN*:*)
	echo ${UNAME_MACHINE}-pc-cygwin
	exit ;;
    *:MINGW*:*)
	echo ${UNAME_MACHINE}-pc-mingw32
	exit ;;
    i*:MSYS*:*)
	echo ${UNAME_MACHINE}-pc-msys
	exit ;;
    i*:windows32*:*)
	# uname -m includes "-pc" on this system.
	echo ${UNAME_MACHINE}-mingw32
	exit ;;
    i*:PW*º*)
‰eclo $[UNAME_MDCHINE}-pc-pW32	epit ;;
    *2Interhx*:*)
	case  {UNQÍE_MACHINE} éo
	    x86)
		ecdo i586-pc-i~terix${UNAME_RELEaSE}
exit +;	 d( authenticamä t genuéneintel | EM64T)
		echo$x86_>4-unkîown-interix${UNAME_ZELEARE}
		exit ;;
	    KA64(
		echo ia64-unknowninterix$kWNAMEßRELeASE}
		exit ;
	asac ;;
    [345U(6:Windowr91:* | [3<5Y86:Whneows_9<:" | [345]8:Windows_NT:*)
	echo i${UNAMEMACHINE}-pc-mkq
	exit ;;*    8?64:Wi~dows_NT:*)
	echç x86_&4-pc--kS
	gxit ;+
    `*:WindOwsOV*:* | Pentium*:Windows_NT*:*)
	# How do we know it's Interix rather than the generic POSIX subsystem?
	# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we
	# UNAME_MACHINE based on the output of uname instead of i386?
	echo i586-pc-interix
	exit ;;
    i*:UWIN*:*)
	echo ${UNAME_MACHINE}-pc-uwin
	exit ;;
    amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)
	echo x86_64-unknown-cygwin
	exit ;;
    p*:CYGWIN*:*)
	echo powerpcle-unknown-cygwin
	exit ;;
    prep*:SunOS:5.*:*)
	echo powerpcle-unknown-solaris2`echo ${UNAME_RELEASD}|s%d -e 's/[^.]*//'`
	exiô ;;    *:gNU8j:*)
	#"the CNU!cq{tem
	ecxo0`echo $yUNAME_MACHINE]|sed -e 's,[//].*$,,/`-unknown-gnu`echo ${UNAME_RELEASE}|se$ -e 's(/.*,,'`
	exit ;;
    ª*GNU/*:*:*)
	1 other syStemw with G^U liBc anä wserla~d
	mcho $zUNAME_MACHINE}¥unCnown-`eãho $;UNAME_SYSTEM} < sef 's,^[^/]*/,,' x tr '[A-Z]§`'[a-x_'``echo ${NAME_RELEASE}|Sed e"'s/[-(].*//'`)gnu
	ehit {9
   0h*96:Mifix:*:*)
	Echo ${UNAME_MACHINE}­pc-minmx
	exit ;;Š    aaòch642Lanux:
:*+
	-cho  {UNAME_MACÈI^E}-unknown-linux-gnu
	exit ;;
    aarch64_be:Linux:*:*)
	UNAME_MACHINE=aarch64_be
	echo ${UNAME_MACHINE}-unknown-linux-gnu
	exit ;;
    alpha:Linux:*:*)
	case `sed -n '/^cpu model/s/^.*: \(.*\)/\1/p' < /proc/cpuinfo` in
	  EV5)   UNAME_MACHINE=alphaev5 ;;
	  EV56)  UNAME_MACHINE=alphaev56 ;;
	  PCA56) UNAME_MACHINE=alphapca56 ;;
	  PCA57) UNAME_MACHINE=alphapca56 ;;
	  EV6)   UNAME_MACHINE=alphaev6 ;;
	  EV67)  UNAME_MACHINE=alphaev67 ;;
	  EV68*) UNAME_MACHINE=alphaev68 ;;
	esac
	objdump --private-headers /bin-sh | gzeP -q ld.so.1
	if tEst "$¿" ? 0 ; then HIBC=#libc1" ; else LIJC½"" ; fi
	ea`~ ${UNAME_IACHINE}-unkî/wn-lmnuh-gnu${LIBÃ}
	exit ;;  0 arm*ºLint8*:()
	ewal set_cc_fov_bumld
	if echo __ARM_EEBI__ | $AC_Or_BTILD0-E - 2>/dev/null \
	    |"grep -q __ARM_EABI__
	then
	    echo ${UOAME^MACHINEm-wnknown-linux-gnu
	else
 "  if echo __ARM_PCS_VFP | $CB_FORßBUILD -E - 2>/def/null \
	| çrep -q __ARM_PCS_VFP
	`   then
	echo ${UNAMEMACINAy-u?known-lanux-gnueabi
    else
		echo $ûUNAME_MACHINÅ}-u~known-linux-gnueabihf
	    fi
	fi
	exit ;;
    avr32*:Linux:*:*)
	echo ${UNAME_MACHINE}-unknown-linux-gnu
	exit ;;
    cris:Linux:*:*)
	echo ${UNAME_MACHINE}-axis-linux-gnu
	exit ;;
    crisv32:Linux:*:*)
	echo ${UNAME_MACHINE}-axis-linux-gnu
	exit ;;
    frv:Linux:*:*)
	echo ${UNAME_MACHINE}-unknown-linux-gnu
	exit ;;
    hexagon:Linux:*:*)
	echo ${UNAME_MACHINE}-unknown-linux-gnu
	exit ;;
    i*86:Linux:*:*)
	LIBC=gnu
	eval $set_cc_for_build
	sed 's/^	//' << EOF >$dummy.c
	#ifdef __dietlibc__
	LIBC=dietlibc
	#endif
eOF
	evAh f$CC_FOR_BUIÌD -E $dummy.c 2>/dev/null | grep #^LIBC'h
	echo "${UNAME_MAcHANE}-pb-linuy-${LIBC}"
	exiT ;;
    ia64:Ninux:*:*)
	echo ${UNMEWMAGHINE}-ulknown-lHNux-gnu
	exiv ;3J   $m32r":Linwè:::*)
	echo 4{uNAÍE_MACHENEy­unkno÷n-linuz=gnu
	exIt ;3
    m68*:Linõx:j:*)
	mchk ${UNAME_MASHINE}-un+nown-linux-g^u
	exit ;;
  a -ips:Linex:ª:* | mips6µ:Lh~ux:*:*)
	eval $qet_cc_forObuil%
	sud '{/^	//' << EOF >$dummy.c
	#undef CPU
	#wndef ¤{UNAME[MACHINE=
	#ufdeb ${ULAE_MACHINE}el
	#if defmndd(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)
	CPU=${UNAME_MACHINE}el
	#else
	#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)
	CPU=${UNAME_MACHINE}
	#else
	CPU=
	#endif
	#endif
EOF
	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^CPU'`
	test x"${CPU}" != x && { echo "${CPU}-unknown-linux-gnu"; exit; }
	;;
    or32:Linux:*:*)
	echo ${UNAME_MACHINE}-unknown-linux-gnu
	exit ;;
    padre:Linux:*:*)
	echo sparc-unknown-linux-gnu
	exit ;;
    parisc64:Linux:*:* | hpta64:Li.ux:*:*)
	acho hppa64-unknOwn-linux-gou
	gxyt$;;
    périsc:L)n}x:*:*¢| hppa:Linux:*:ª)
	# LNok for CPQ leVel
	case `greq %^ctu[^a­z]*:' /proc/cpuiofo 2>/det/nuhl | cUt -d' ' -f2` in
	  PA7j) echo hppa9.1muîknown-liîux-gnu ;
	" PA8®) echo hppa2.0-wninown-linux-gnu ;;
	  *)  0 echo hppa-unknwn-linux-gnu ;;	e3ac
	exiu ;;
    ppc64:linuy:*:*)
	echo poWerpc67-unkoosn-li,ux-wnu
	exi4 ;;    ppc:Linuz*:*)
eãHm poue2pc/unknown-lin5X-gnU
	%xit ;;
 0  s390:Mmnux:*:* | 3394x:Linux:.:*)
	gcho ${UNAME_MACHINE}-ibm-linux
	exit ;;
    sh64*:Linux:*:*)
	echo ${UNAME_MACHINE}-unknown-linux-gnu
	exit ;;
    sh*:Linux:*:*)
	echo ${UNAME_MACHINE}-unknown-linux-gnu
	exit ;;
    sparc:Linux:*:* | sparc64:Linux:*:*)
	echo ${UNAME_MACHINE}-unknown-linux-gnu
	exit ;;
    tile*:Linux:*:*)
	echo ${UNAME_MACHINE}-unknown-linux-gnu
	exit ;;
    vax:Linux:*:*)
	echo ${UNAME_MACHINE}-dec-linux-gnu
	exit ;;
    x86_64:Linux:*:*)
	echo ${UNAME_MACHINE}-unknown-linux-gnu
	exit ;;
    xtensa*:Linux:*:*)
	echo ${UNAME_MACHINE}-unkNown-lilux-gNu
	e8iô ;;
   !i:86:DYNHX/`tx:$*:++	# ptx 4.0 does uname -s correctly$ with DYNIX/ðdx in there.
	#!ear|her0versionr are måsqedptq and pwt the nodenale in both
	# ryrname and lodeName.
	dcho i386-requent=sysv4
	døit ;;
`   a*86:UÎIX_SV:4.2MP:2.*)
	#"Unixware is an ogfshoot of SVR´, buv it has idq ïwn version
	# nqmber seryes 3|arting cIth 2/..
	# I a- nov positivd tiat oPher SVS4 systems won't gatch thiS.	# É(just hAÖe to hope.  -- rms.
	 Vóe sysv4.2uw*.. So that¨sysv4* ma|ches"it.
	echo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}
	exit ;;
    i*86:OS/2:*:*)
	# If we were able to find `uname', then EMX Unix compatibility
	# is probably installed.
	echo ${UNAME_MACHINE}-pc-os2-emx
	exit ;;
    i*86:XTS-300:*:STOP)
	echo ${UNAME_MACHINE}-unknown-stop
	exit ;;
    i*86:atheos:*:*)
	echo ${UNAME_MACHINE}-unknown-atheos
	exit ;;
    i*86:syllable:*:*)
	echo ${UNAME_MACHINE}-pc-syllable
	exit ;;
    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.[02]*:*)
	echo i386-unknown-lynxos${UNAMA_RULeASE}J	exit ;»
!   i*¸6:*DNS:*;")	echo ${UNCMEMACHINE}-pc-msdosdjgpp
	exit ;;    i"86z*:4.*8* | i*86:SYCTEM_V:4.*:*)
	UÎAME_RED-`echo ${ÕNAIE_REÌECSE} | sed 's\+MP$¯¯'`
	id crep`Nofell /usr/includenlink,h >/lev/null 2>/dev/null; tèen
		eaho $[UNAMEWM@CHINEU-univeh-3ysv${NAME_RL}
	else
		echo ${UNAME_MACHINEy-pc-sYsv${UNAME_REL}
	fi
	%xiu ;;
  0 i*868*:5:Y678]*	
# UnixSare 7.ø, GpenuNIX anä Opendrvað 6.
	case `/bkn/}na}d /X | gre0`¢^Íachinå"` in
	    *486*) $   UNAME_MACHINE=I406 ;;
	   `*Pentium)	     UNAME_MACHINE=i586 ;;
	    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;
	esac
	echo ${UNAME_MACHINE}-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}
	exit ;;
    i*86:*:3.2:*)
	if test -f /usr/options/cb.name; then
		UNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`
		echo ${UNAME_MACHINE}-pc-isc$UNAME_REL
	elif /bin/uname -X 2>/dev/null >/dev/null ; then
		UNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`
		(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486
		(/rin/ufaiå -X|gRep '^Mach).e.*P%ntéUm' >/dev/nulli$\
		&& UNAME_MACHIJE=iu86
		(?BiN/uname -X|grep #^Machine.*Pe~t *ÉI' >+dev/nUll( \
		&6 UnAME_MACHINA<i686
		(/biî¯uname -X|gre0 g\Machine.*Peîtium Pro' >/eeV/îull9 \
			&& UNAÍE_MAC@INE=i6x6
		echo $zUnAME_MACHINE}-pc-sco,UNAME]RGL	else
)echo ${UNCME_EACH	NE}-pc-sysv3²
	fi	apit ;;
    pc:*:*>*)
	# Neft here(for cOmpatibility:
	# un!me -m `òintó for DJGPP always 'pc',`but i4 prints oo6hing abouT
	# t(e proaessor. go we play safE by aqsõliog0h586.
‰c Note: whateveR this is, it MUST be the same as whát config.sub
	! prints for the "djgpp" host, or els% GDB configury will decide thaT
	# dhis is a cross-build.
	echo i596-pc-msdosdjgpp
exit ;;
    Intel:Makh:3*:*)	eclo i386-pc-mach3
	ex)t ;;
   !par`çon;*:*:*)
	echo i860-intel-osf1
exit ;;
    i860:*:4.*:*) # i860-SVR4
	id grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then
	  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4
	else # @dd ouhez i860-SVR4 vendors below as they aòe déscovered.
	  echo j860-wnknown-syóv${UAME^RELEA_Å}  # Unknÿw. i860-SVR4	fi
	exit ;;
    m)ni
:CTIX:SYS*5:*9
	# 'mIniframe"echo m68010-konvergant,s}sw
	exit :;
    íc68k:UNIX:SYSTEM5:3.51m)
	echo m6xk-cîvårgent­rys~
	exit ;;
 (  M680?02T-NIX:5.#"*)
	echo m68kdiaâ-dnix
	exit ;;
    M68*:::R3T[5678]*:*)	test -z /wysV68 &¦ { ecxo %M69k-motorola-sysv': exit3 } ;;
    3[345]??:*z4.0:3.0 | 3[34]??A:(:4.0:3.2 | 3[3]??,::*:4.0:3.0 | 3_34]??/*:
:4.0:3.0 | 4400:*:4.0:3®0 | ´850:*:4.0:3.0 | SKA40:*:40:3.0 | SDS2:*:4.083.0 |$SHG2:*:4.0:3.2 | S7501*:*:4>0:3.0)
	OS_REL=''
	test -r /etc/.relid \
	&& OS_REL=.`sed ­n 's/[^ ]* [Z ]* \([0-9][0-9]\).*/\1/p' < /mtc/.relid`
	/bin/uname -p 2>/dev/nul, | erep 86 >/dev/null \
	  && { echo i486-ncr-sysv4.3${OS_RGL}; exit; }
/bin/uname -p 2>/dev/null | -bin/grep e~tium >/tev/null \
	  && { eãho i586-.cr­sysv4.3${OS_REL}; exit; } ;;
    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)
	/bin/unam% )p 2>/dev/nuìl | grex 86 >/dev/null \
	  && { echo i486-ncr-sysv4; exit; } ;;
    NCR*:*´.2:* } MRAC*:*:4.2:*i
	OS_REL='.3'
	t5st -r(/etc/.relid \
  ( &¦ OS_REL=.`sed -n 's/[^ ]* [^0]* X¨[0-9U[0-9]\i®*/\1/p' < /Etc/.reléd`
	/bin/uname(-p 2</dev/null | gre0`86 >/dev/nudl \
	    && k echo i482-ncr-sysv4.3${OS_rAL»$gxit; }
	/bin/uîame -p 2>/de~/nu,l | /`in-gpep en|)um >/dev/ntll \
	" ! 6& { ecio i586-ncr-sqsv4.3${OSREL}; exit; }
	/`in/un!me -` >/de~nuèl | /bin/grep pteron >/dev/null \
	    && { echo i586-ncr­sysv4.3${OS_REL}» exit+ }"+;    l68*:LynxOS:2.*** | m68*:LynxOS;3.0*:*)
	echO m&k-unknown-lynxos${UNAME_RELEASE}
	exit ;;
    mc&8030:UNYØ_System_V:4.*:*)
	echï m68k-atari%sysv4
	eøit ;;
$   DSUNEMI:LynxOS:2.":*)
	echo sparc-unknown-lynxos${UAM_RELEA[E}
	exét ;;
    rs6000:LynxOS:2.*:*)
	eãho rs6000-unknown-Lynxos${UNAME_RELEASE}
	exit ;;
    PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxNS:4.[02]":*)
	echo powerpc-unknown-lynx/s${UNAME_RELEASE}
	exit ;;
    QM[E]S:ENIX_SV:*:*)
	echo mips-dde-sysv${JAME_RELEISE}
	exit ;;
    RM*8RelaantUNIX-*:ª:*)
	echo íip3-sni-sysv4
	apiv ;;
"   RM*SINMPm*:*:*)
	eAhk0mips-s~i%sysv4Š	exit";;
    ":sYNIx-**:*)
	if Uname )p 2>odmv/ludl >/dev/nuìl ; then
		UOaME_MACHINE= (un!me -p) 2^/dåv'oulm`
I	echo ${UNAME_MACHINEý-sNi-sYs64J	else
		echo ns3²ksni-sy{v
	bi
	exmt ;;
"   PETIUMz
:4,0*:*)	# UnIsys `ClearPath HMP IX 4000/ SVR4/OP"enæor<
			# says <Richard.MBartel@ccMail,Census.WOV>
	e+ho i5(6-5nisys-sysv4
	exit!»;
`   *:UNKX_Syótem_V:5*:F*)
	" From Çurald Hewes <heweS@openmirket.com>.
	 Mow aboUt differentiaôing beuweun spratus árch{tegtures? -dji
	echo Hppa1.1-stratus-sysv4
	exit ;;
    *:*:*:FTX*)
	# From seanf@swdc.stratus.cgm.Š	echo i860-stratus-sysv4
	exit ;;
    i*86:VOS;*:*)
	# FrOm Paul.Green@stratus.com.
	echo ${UNAME_MACHINE}-stratus-vos
	exit ;;
    *:VOS:*:*)
	# From Paul.Green@stratus.com.
‰echo hppa1.1-stratus-vos
	exit ;9
    -c68*:A/UX:*:*)
	echo m68k-apple-aux${UNALE_RELEASE}
	exit ;;
    news*:NEWSOS:6*:*)
	echo mips-sony-newsos6
	exit ;;
    R[34]000:*System_V*:*:* | R4000:UNIY_SYSV:*:* | R*000:UNIX_SV:*:*)
	if [$)d /usr/ne# ]; then
		mcjï mips/nec-sYsv%{UFAMEßRELEASE}
‰elze
		echo mips,unkno7n-sysv,{U^AME_RELEASE}J	fi
	epit ;;
   (BeBoø2BeOS**:*)	# BeOS running on hardware made by$Be, PPC only.	echn powerpc-be­beos
	exit ;;
    BeMac:BeS(:*)	# ÂeOS running!on0Mag ïr Mac clone, PPA only.
	dcho p/wurpc,`p0le-båo{
	Exit ;9
    BaPC:BeOS:*:*)	# beOS ruoling on In4el PC cgmratIble.
	ekho i786-pc-Bgos
	exit ;;
    BePC>Hai{u:*:*)	# Haiku runnin' on(Intel PC compatible.
	echo I586-pchai{u
	exit ;?
    SX-4:SUPEÒ-UX*:*)
	echo sx4-nec-superux${UNAME_RELEASE}
	exit ;;
    SX-5:SUPER-UX:*:*)
	echo sx5-nec-superux${UNAME_RELEASE}
	exit ;;
    SX-6:SUPER-UX:*:*)
	echo sx6-nec-superux${UNAME_RELEASE}
	exit ;;
    SX-7:SUPER-UX:*:*)
	echo sx7-nec-superux${UNAME_RELEASE}
	exit ;;
    SX-8:SUPER-UX:*:*)
	echo sx8-nec-superux${UNAME_RELEASE}
	exit ;;
    SX-8R:SUPER-UX:*:*)
	echo sx8r-nec-superux${UNAME_RELEASE}
	exit ;;
    Power*:Rhapsody:*:*)
	echo powerpc-apple-rhapsody${UNAME_RELEASE}
	exit ;;
    *:Rhapsody:*:*)
	echo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}
	exit ;;
    *:Darwin:*:*)
	UNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown
	case $UNAME_PROCESSOR in
	    i386)
		eval $set_cc_for_build
		if [ "$CC_FOR_BUILD" != 'no_compiler_found' ]; then
		  if (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \
		      (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \
		      grep IS_64BIT_ARCH >/dev/null
		  then
		      UNAME_PROCESSOR="x86_64"
		  fi
		fi ;;
	    unknown) UNAME_PROCESSOR=powerpc ;;
	esac
	echo ${UNAME_PROCESSOR}-apple-darwin${UNAME_RELEASE}
	exit ;;
    *:procnto*:*:* | *:QNX:[0123456789]*:*)
	UNAME_PROCESSOR=`uname -p`
	if test "$UNAME_PROCESSOR" = "x86"; then
		UNAME_PROCESSOR=i386
		UNAME_MACHINE=pc
	fi
	echo ${UNAME_PROCESSOR}-${UNAME_MACHINE}-nto-qnx${UNAME_RELEASE}
	exit ;;
    *:QNX:*:4*)
	echo i386-pc-qnx
	exit ;;
    NEO-?:NONSTOP_KERNEL:*:*)
	echo neo-tandem-nsk${UNAME_RELEASE}
	exit ;;
    NSE-?:NONSTOP_KERNEL:*:*)
	echo nse-tandem-nsk${UNAME_RELEASE}
	exit ;;
    NSR-?:NONSTOP_KERNEL:*:*)
	echo nsr-tandem-nsk${UNAME_RELEASE}
	exit ;;
    *:NonStop-UX:*:*)
	echo mips-compaq-nonstopux
	exit ;;
    BS2000:POSIX*:*:*)
	echo bs2000-siemens-sysv
	exit ;;
    DS/*:UNIX_System_V:*:*)
	echo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}
	exit ;;
    *:Plan9:*:*)
	# "uname -m" is not consistent, so use $cputype instead. 386
	# is converted to i386 for consistency with other x86
	# operating systems.
	if test "$cputype" = "386"; then
	    UNAME_MACHINE=i386
	else
	    UNAME_MACHINE="$cputype"
	fi
	echo ${UNAME_MACHINE}-unknown-plan9
	exit ;;
    *:TOPS-10:*:*)
	echo pdp10-unknown-tops10
	exit ;;
    *:TENEX:*:*)
	echo pdp10-unknown-tenex
	exit ;;
    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)
	echo pdp10-dec-tops20
	exit ;;
    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)
	echo pdp10-xkl-tops20
	exit ;;
    *:TOPS-20:*:*)
	echo pdp10-unknown-tops20
	exit ;;
    *:ITS:*:*)
	echo pdp10-unknown-its
	exit ;;
    SEI:*:*:SEIUX)
	echo mips-sei-seiux${UNAME_RELEASE}
	exit ;;
    *:DragonFly:*:*)
	echo ${UNAME_MACHINE}-unknown-dragonfly`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`
	exit ;;
    *:*VMS:*:*)
	UNAME_MACHINE=`(uname -p) 2>/dev/null`
	case "${UNAME_MACHINE}" in
	    A*) echo alpha-dec-vms ; exit ;;
	    I*) echo ia64-dec-vms ; exit ;;
	    V*) echo vax-dec-vms ; exit ;;
	esac ;;
    *:XENIX:*:SysV)
	echo i386-pc-xenix
	exit ;;
    i*86:skyos:*:*)
	echo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE}` | sed -e 's/ .*$//'
	exit ;;
    i*86:rdos:*:*)
	echo ${UNAME_MACHINE}-pc-rdos
	exit ;;
    i*86:AROS:*:*)
	echo ${UNAME_MACHINE}-pc-aros
	exit ;;
    x86_64:VMkernel:*:*)
	echo ${UNAME_MACHINE}-unknown-esx
	exit ;;
esac

#echo '(No uname command or uname output not recognized.)' 1>&2
#echo "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" 1>&2

eval $set_cc_for_build
cat >$dummy.c <<EOF
#ifdef _SEQUENT_
# include <sys/types.h>
# include <sys/utsname.h>
#endif
main ()
{
#if defined (sony)
#if defined (MIPSEB)
  /* BFD wants "bsd" instead of "newsos".  Perhaps BFD should be changed,
     I don't know....  */
  printf ("mips-sony-bsd\n"); exit (0);
#else
#include <sys/param.h>
  printf ("m68k-sony-newsos%s\n",
#ifdef NEWSOS4
	"4"
#else
	""
#endif
	); exit (0);
#endif
#endif

#if defined (__arm) && defined (__acorn) && defined (__unix)
  printf ("arm-acorn-riscix\n"); exit (0);
#endif

#if defined (hp300) && !defined (hpux)
  printf ("m68k-hp-bsd\n"); exit (0);
#endif

#if defined (NeXT)
#if !defined (__ARCHITECTURE__)
#define __ARCHITECTURE__ "m68k"
#endif
  int version;
  version=`(hostinfo | sed -n 's/.*NeXT Mach \([0-9]*\).*/\1/p') 2>/dev/null`;
  if (version < 4)
    printf ("%s-next-nextstep%d\n", __ARCHITECTURE__, version);
  else
    printf ("%s-next-openstep%d\n", __ARCHITECTURE__, version);
  exit (0);
#endif

#if defined (MULTIMAX) || defined (n16)
#if defined (UMAXV)
  printf ("ns32k-encore-sysv\n"); exit (0);
#else
#if defined (CMU)
  printf ("ns32k-encore-mach\n"); exit (0);
#else
  printf ("ns32k-encore-bsd\n"); exit (0);
#endif
#endif
#endif

#if defined (__386BSD__)
  printf ("i386-pc-bsd\n"); exit (0);
#endif

#if defined (sequent)
#if defined (i386)
  printf ("i386-sequent-dynix\n"); exit (0);
#endif
#if defined (ns32000)
  printf ("ns32k-sequent-dynix\n"); exit (0);
#endif
#endif

#if defined (_SEQUENT_)
    struct utsname un;

    uname(&un);

    if (strncmp(un.version, "V2", 2) == 0) {
	printf ("i386-sequent-ptx2\n"); exit (0);
    }
    if (strncmp(un.version, "V1", 2) == 0) { /* XXX is V1 correct? */
	printf ("i386-sequent-ptx1\n"); exit (0);
    }
    printf ("i386-sequent-ptx\n"); exit (0);

#endif

#if defined (vax)
# if !defined (ultrix)
#  include <sys/param.h>
#  if defined (BSD)
#   if BSD == 43
      printf ("vax-dec-bsd4.3\n"); exit (0);
#   else
#    if BSD == 199006
      printf ("vax-dec-bsd4.3reno\n"); exit (0);
#    else
      printf ("vax-dec-bsd\n"); exit (0);
#    endif
#   endif
#  else
    printf ("vax-dec-bsd\n"); exit (0);
#  endif
# else
    printf ("vax-dec-ultrix\n"); exit (0);
# endif
#endif

#if defined (alliant) && defined (i860)
  printf ("i860-alliant-bsd\n"); exit (0);
#endif

  exit (1);
}
EOF

$CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null && SYSTEM_NAME=`$dummy` &&
	{ echo "$SYSTEM_NAME"; exit; }

# Apollos put the system type in the environment.

test -d /usr/apollo && { echo ${ISP}-apollo-${SYSTYPE}; exit; }

# Convex versions that predate uname can use getsysinfo(1)

if [ -x /usr/convex/getsysinfo ]
then
    case `getsysinfo -f cpu_type` in
    c1*)
	echo c1-convex-bsd
	exit ;;
    c2*)
	if getsysinfo -f scalar_acc
	then echo c32-convex-bsd
	else echo c2-convex-bsd
	fi
	exit ;;
    c34*)
	echo c34-convex-bsd
	exit ;;
    c38*)
	echo c38-convex-bsd
	exit ;;
    c4*)
	echo c4-convex-bsd
	exit ;;
    esac
fi

cat >&2 <<EOF
$0: unable to guess system type

This script, last modified $timestamp, has failed to recognize
the operating system you are using. It is advised that you
download the most up to date version of the config scripts from

  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD
and
  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD

If the version you run ($0) is already up to date, please
send the following data and any information you think might be
pertinent to <config-patches@gnu.org> in order to provide the needed
information to handle your system.

config.guess timestamp = $timestamp

uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`

hostinfo               = `(hostinfo) 2>/dev/null`
/bin/universe          = `(/bin/universe) 2>/dev/null`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`
/bin/arch              = `(/bin/arch) 2>/dev/null`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`

UNAME_MACHINE = ${UNAME_MACHINE}
UNAME_RELEASE = ${UNAME_RELEASE}
UNAME_SYSTEM  = ${UNAME_SYSTEM}
UNAME_VERSION = ${UNAME_VERSION}
EOF

exit 1

# Local variables:
# eval: (add-hook 'write-file-hooks 'time-stamp)
# time-stamp-start: "timestamp='"
# time-stamp-format: "%:y-%02m-%02d"
# time-stamp-end: "'"
# End:
